<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="82" passed="82">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="69387" started-at="2020-09-29T11:52:15Z" finished-at="2020-09-29T11:53:25Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="69387" started-at="2020-09-29T11:52:15Z" finished-at="2020-09-29T11:53:25Z">
      <class name="knowler_unitTests.TestLogic">
        <test-method status="PASS" signature="InicializeBrowser()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeBrowser" is-config="true" duration-ms="6619" started-at="2020-09-29T12:52:15Z" finished-at="2020-09-29T12:52:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeBrowser -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="9" started-at="2020-09-29T12:52:22Z" finished-at="2020-09-29T12:52:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="excelManagerFailure()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="excelManagerFailure" duration-ms="59" started-at="2020-09-29T12:52:22Z" finished-at="2020-09-29T12:52:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- excelManagerFailure -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="402" started-at="2020-09-29T12:52:22Z" finished-at="2020-09-29T12:52:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=excelManagerFailure status=SUCCESS method=TestLogic.excelManagerFailure()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="excelManagerSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="excelManagerSuccess" duration-ms="197" started-at="2020-09-29T12:52:23Z" finished-at="2020-09-29T12:52:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- excelManagerSuccess -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:23Z" finished-at="2020-09-29T12:52:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="416" started-at="2020-09-29T12:52:23Z" finished-at="2020-09-29T12:52:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=excelManagerSuccess status=SUCCESS method=TestLogic.excelManagerSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="1" started-at="2020-09-29T12:52:23Z" finished-at="2020-09-29T12:52:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="excelManagerTestDataFailure()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="excelManagerTestDataFailure" duration-ms="0" started-at="2020-09-29T12:52:23Z" finished-at="2020-09-29T12:52:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- excelManagerTestDataFailure -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="350" started-at="2020-09-29T12:52:23Z" finished-at="2020-09-29T12:52:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=excelManagerTestDataFailure status=SUCCESS method=TestLogic.excelManagerTestDataFailure()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="excelManagerTestDataSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="excelManagerTestDataSuccess" duration-ms="103" started-at="2020-09-29T12:52:23Z" finished-at="2020-09-29T12:52:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- excelManagerTestDataSuccess -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:23Z" finished-at="2020-09-29T12:52:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="359" started-at="2020-09-29T12:52:24Z" finished-at="2020-09-29T12:52:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=excelManagerTestDataSuccess status=SUCCESS method=TestLogic.excelManagerTestDataSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:24Z" finished-at="2020-09-29T12:52:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testCheckClassFail()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testCheckClassFail" duration-ms="68" started-at="2020-09-29T12:52:24Z" finished-at="2020-09-29T12:52:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckClassFail -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="354" started-at="2020-09-29T12:52:24Z" finished-at="2020-09-29T12:52:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckClassFail status=SUCCESS method=TestLogic.testCheckClassFail()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testCheckClassSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testCheckClassSuccess" duration-ms="29" started-at="2020-09-29T12:52:24Z" finished-at="2020-09-29T12:52:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckClassSuccess -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:24Z" finished-at="2020-09-29T12:52:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="355" started-at="2020-09-29T12:52:24Z" finished-at="2020-09-29T12:52:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckClassSuccess status=SUCCESS method=TestLogic.testCheckClassSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:25Z" finished-at="2020-09-29T12:52:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testCheckContemFail()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testCheckContemFail" duration-ms="25" started-at="2020-09-29T12:52:25Z" finished-at="2020-09-29T12:52:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckContemFail -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="361" started-at="2020-09-29T12:52:25Z" finished-at="2020-09-29T12:52:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckContemFail status=SUCCESS method=TestLogic.testCheckContemFail()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testCheckContemSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testCheckContemSuccess" duration-ms="16" started-at="2020-09-29T12:52:25Z" finished-at="2020-09-29T12:52:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckContemSuccess -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:25Z" finished-at="2020-09-29T12:52:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="343" started-at="2020-09-29T12:52:25Z" finished-at="2020-09-29T12:52:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckContemSuccess status=SUCCESS method=TestLogic.testCheckContemSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="1" started-at="2020-09-29T12:52:26Z" finished-at="2020-09-29T12:52:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testCheckCorFail()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testCheckCorFail" duration-ms="17" started-at="2020-09-29T12:52:26Z" finished-at="2020-09-29T12:52:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckCorFail -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="352" started-at="2020-09-29T12:52:26Z" finished-at="2020-09-29T12:52:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckCorFail status=SUCCESS method=TestLogic.testCheckCorFail()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:26Z" finished-at="2020-09-29T12:52:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testCheckCorSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testCheckCorSuccess" duration-ms="18" started-at="2020-09-29T12:52:26Z" finished-at="2020-09-29T12:52:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckCorSuccess -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="342" started-at="2020-09-29T12:52:26Z" finished-at="2020-09-29T12:52:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckCorSuccess status=SUCCESS method=TestLogic.testCheckCorSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="1" started-at="2020-09-29T12:52:26Z" finished-at="2020-09-29T12:52:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testCheckDisponivelInvalidValue()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testCheckDisponivelInvalidValue" duration-ms="11" started-at="2020-09-29T12:52:26Z" finished-at="2020-09-29T12:52:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckDisponivelInvalidValue -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="342" started-at="2020-09-29T12:52:26Z" finished-at="2020-09-29T12:52:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckDisponivelInvalidValue status=SUCCESS method=TestLogic.testCheckDisponivelInvalidValue()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:27Z" finished-at="2020-09-29T12:52:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testCheckDisponivelNaoFail()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testCheckDisponivelNaoFail" duration-ms="46" started-at="2020-09-29T12:52:27Z" finished-at="2020-09-29T12:52:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckDisponivelNaoFail -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="343" started-at="2020-09-29T12:52:27Z" finished-at="2020-09-29T12:52:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckDisponivelNaoFail status=SUCCESS method=TestLogic.testCheckDisponivelNaoFail()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testCheckDisponivelNaoSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testCheckDisponivelNaoSuccess" duration-ms="20" started-at="2020-09-29T12:52:27Z" finished-at="2020-09-29T12:52:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckDisponivelNaoSuccess -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:27Z" finished-at="2020-09-29T12:52:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="338" started-at="2020-09-29T12:52:27Z" finished-at="2020-09-29T12:52:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckDisponivelNaoSuccess status=SUCCESS method=TestLogic.testCheckDisponivelNaoSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:27Z" finished-at="2020-09-29T12:52:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testCheckDisponivelSimFail()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testCheckDisponivelSimFail" duration-ms="17" started-at="2020-09-29T12:52:27Z" finished-at="2020-09-29T12:52:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckDisponivelSimFail -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="380" started-at="2020-09-29T12:52:27Z" finished-at="2020-09-29T12:52:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckDisponivelSimFail status=SUCCESS method=TestLogic.testCheckDisponivelSimFail()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testCheckDisponivelSimSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testCheckDisponivelSimSuccess" duration-ms="31" started-at="2020-09-29T12:52:28Z" finished-at="2020-09-29T12:52:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckDisponivelSimSuccess -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:28Z" finished-at="2020-09-29T12:52:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="380" started-at="2020-09-29T12:52:28Z" finished-at="2020-09-29T12:52:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckDisponivelSimSuccess status=SUCCESS method=TestLogic.testCheckDisponivelSimSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="1" started-at="2020-09-29T12:52:28Z" finished-at="2020-09-29T12:52:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="401" started-at="2020-09-29T12:52:28Z" finished-at="2020-09-29T12:52:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckInvalidAttributeName status=SUCCESS method=TestLogic.testCheckInvalidAttributeName()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testCheckInvalidAttributeName()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testCheckInvalidAttributeName" duration-ms="0" started-at="2020-09-29T12:52:28Z" finished-at="2020-09-29T12:52:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckInvalidAttributeName -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:29Z" finished-at="2020-09-29T12:52:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testCheckInvalidXpath()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testCheckInvalidXpath" duration-ms="30" started-at="2020-09-29T12:52:29Z" finished-at="2020-09-29T12:52:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckInvalidXpath -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="425" started-at="2020-09-29T12:52:29Z" finished-at="2020-09-29T12:52:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckInvalidXpath status=SUCCESS method=TestLogic.testCheckInvalidXpath()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testCheckNullxPath()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testCheckNullxPath" duration-ms="0" started-at="2020-09-29T12:52:29Z" finished-at="2020-09-29T12:52:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckNullxPath -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:29Z" finished-at="2020-09-29T12:52:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="403" started-at="2020-09-29T12:52:29Z" finished-at="2020-09-29T12:52:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckNullxPath status=SUCCESS method=TestLogic.testCheckNullxPath()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testCheckTextoFail()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testCheckTextoFail" duration-ms="60" started-at="2020-09-29T12:52:29Z" finished-at="2020-09-29T12:52:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckTextoFail -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:29Z" finished-at="2020-09-29T12:52:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="417" started-at="2020-09-29T12:52:29Z" finished-at="2020-09-29T12:52:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckTextoFail status=SUCCESS method=TestLogic.testCheckTextoFail()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:30Z" finished-at="2020-09-29T12:52:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testCheckTextoSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testCheckTextoSuccess" duration-ms="27" started-at="2020-09-29T12:52:30Z" finished-at="2020-09-29T12:52:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckTextoSuccess -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="395" started-at="2020-09-29T12:52:30Z" finished-at="2020-09-29T12:52:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckTextoSuccess status=SUCCESS method=TestLogic.testCheckTextoSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:30Z" finished-at="2020-09-29T12:52:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testCheckUrlFail()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testCheckUrlFail" duration-ms="6" started-at="2020-09-29T12:52:30Z" finished-at="2020-09-29T12:52:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckUrlFail -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="406" started-at="2020-09-29T12:52:30Z" finished-at="2020-09-29T12:52:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckUrlFail status=SUCCESS method=TestLogic.testCheckUrlFail()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:31Z" finished-at="2020-09-29T12:52:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testCheckUrlSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testCheckUrlSuccess" duration-ms="7" started-at="2020-09-29T12:52:31Z" finished-at="2020-09-29T12:52:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckUrlSuccess -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="384" started-at="2020-09-29T12:52:31Z" finished-at="2020-09-29T12:52:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckUrlSuccess status=SUCCESS method=TestLogic.testCheckUrlSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="17" started-at="2020-09-29T12:52:31Z" finished-at="2020-09-29T12:52:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testCheckVisivelInvalidValue()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testCheckVisivelInvalidValue" duration-ms="11" started-at="2020-09-29T12:52:31Z" finished-at="2020-09-29T12:52:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckVisivelInvalidValue -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="411" started-at="2020-09-29T12:52:31Z" finished-at="2020-09-29T12:52:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckVisivelInvalidValue status=SUCCESS method=TestLogic.testCheckVisivelInvalidValue()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:32Z" finished-at="2020-09-29T12:52:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testCheckVisivelNaoFail()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testCheckVisivelNaoFail" duration-ms="25" started-at="2020-09-29T12:52:32Z" finished-at="2020-09-29T12:52:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckVisivelNaoFail -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="422" started-at="2020-09-29T12:52:32Z" finished-at="2020-09-29T12:52:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckVisivelNaoFail status=SUCCESS method=TestLogic.testCheckVisivelNaoFail()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:32Z" finished-at="2020-09-29T12:52:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testCheckVisivelNaoSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testCheckVisivelNaoSuccess" duration-ms="33" started-at="2020-09-29T12:52:32Z" finished-at="2020-09-29T12:52:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckVisivelNaoSuccess -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="350" started-at="2020-09-29T12:52:32Z" finished-at="2020-09-29T12:52:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckVisivelNaoSuccess status=SUCCESS method=TestLogic.testCheckVisivelNaoSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testCheckVisivelSimFail()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testCheckVisivelSimFail" duration-ms="17" started-at="2020-09-29T12:52:32Z" finished-at="2020-09-29T12:52:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckVisivelSimFail -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:32Z" finished-at="2020-09-29T12:52:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="386" started-at="2020-09-29T12:52:32Z" finished-at="2020-09-29T12:52:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckVisivelSimFail status=SUCCESS method=TestLogic.testCheckVisivelSimFail()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:33Z" finished-at="2020-09-29T12:52:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testCheckVisivelSimSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testCheckVisivelSimSuccess" duration-ms="29" started-at="2020-09-29T12:52:33Z" finished-at="2020-09-29T12:52:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckVisivelSimSuccess -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="349" started-at="2020-09-29T12:52:33Z" finished-at="2020-09-29T12:52:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckVisivelSimSuccess status=SUCCESS method=TestLogic.testCheckVisivelSimSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testClickFailure()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testClickFailure" duration-ms="21" started-at="2020-09-29T12:52:33Z" finished-at="2020-09-29T12:52:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClickFailure -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:33Z" finished-at="2020-09-29T12:52:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="385" started-at="2020-09-29T12:52:33Z" finished-at="2020-09-29T12:52:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickFailure status=SUCCESS method=TestLogic.testClickFailure()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testClickNull()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testClickNull" duration-ms="0" started-at="2020-09-29T12:52:34Z" finished-at="2020-09-29T12:52:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClickNull -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="382" started-at="2020-09-29T12:52:34Z" finished-at="2020-09-29T12:52:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickNull status=SUCCESS method=TestLogic.testClickNull()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:34Z" finished-at="2020-09-29T12:52:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testClickSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testClickSuccess" duration-ms="133" started-at="2020-09-29T12:52:34Z" finished-at="2020-09-29T12:52:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClickSuccess -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:34Z" finished-at="2020-09-29T12:52:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="406" started-at="2020-09-29T12:52:34Z" finished-at="2020-09-29T12:52:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickSuccess status=SUCCESS method=TestLogic.testClickSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testClickXYInvalidX()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testClickXYInvalidX" duration-ms="0" started-at="2020-09-29T12:52:34Z" finished-at="2020-09-29T12:52:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClickXYInvalidX -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:34Z" finished-at="2020-09-29T12:52:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="362" started-at="2020-09-29T12:52:34Z" finished-at="2020-09-29T12:52:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickXYInvalidX status=SUCCESS method=TestLogic.testClickXYInvalidX()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="1" started-at="2020-09-29T12:52:35Z" finished-at="2020-09-29T12:52:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="332" started-at="2020-09-29T12:52:35Z" finished-at="2020-09-29T12:52:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickXYInvalidXY status=SUCCESS method=TestLogic.testClickXYInvalidXY()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testClickXYInvalidXY()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testClickXYInvalidXY" duration-ms="0" started-at="2020-09-29T12:52:35Z" finished-at="2020-09-29T12:52:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClickXYInvalidXY -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="335" started-at="2020-09-29T12:52:35Z" finished-at="2020-09-29T12:52:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickXYInvalidY status=SUCCESS method=TestLogic.testClickXYInvalidY()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testClickXYInvalidY()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testClickXYInvalidY" duration-ms="0" started-at="2020-09-29T12:52:35Z" finished-at="2020-09-29T12:52:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClickXYInvalidY -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:35Z" finished-at="2020-09-29T12:52:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testClickXYSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testClickXYSuccess" duration-ms="212" started-at="2020-09-29T12:52:36Z" finished-at="2020-09-29T12:52:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClickXYSuccess -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:36Z" finished-at="2020-09-29T12:52:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="378" started-at="2020-09-29T12:52:36Z" finished-at="2020-09-29T12:52:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClickXYSuccess status=SUCCESS method=TestLogic.testClickXYSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testMoveMouseObjectInvalidxPath()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testMoveMouseObjectInvalidxPath" duration-ms="10" started-at="2020-09-29T12:52:36Z" finished-at="2020-09-29T12:52:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMoveMouseObjectInvalidxPath -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:36Z" finished-at="2020-09-29T12:52:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="356" started-at="2020-09-29T12:52:36Z" finished-at="2020-09-29T12:52:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMoveMouseObjectInvalidxPath status=SUCCESS method=TestLogic.testMoveMouseObjectInvalidxPath()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testMoveMouseObjectNullxPath()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testMoveMouseObjectNullxPath" duration-ms="1" started-at="2020-09-29T12:52:36Z" finished-at="2020-09-29T12:52:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMoveMouseObjectNullxPath -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:36Z" finished-at="2020-09-29T12:52:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="349" started-at="2020-09-29T12:52:36Z" finished-at="2020-09-29T12:52:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMoveMouseObjectNullxPath status=SUCCESS method=TestLogic.testMoveMouseObjectNullxPath()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testMoveMouseObjectSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testMoveMouseObjectSuccess" duration-ms="118" started-at="2020-09-29T12:52:37Z" finished-at="2020-09-29T12:52:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMoveMouseObjectSuccess -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:37Z" finished-at="2020-09-29T12:52:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="343" started-at="2020-09-29T12:52:37Z" finished-at="2020-09-29T12:52:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMoveMouseObjectSuccess status=SUCCESS method=TestLogic.testMoveMouseObjectSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="355" started-at="2020-09-29T12:52:37Z" finished-at="2020-09-29T12:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMoveMouseXYInvalidX status=SUCCESS method=TestLogic.testMoveMouseXYInvalidX()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:37Z" finished-at="2020-09-29T12:52:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testMoveMouseXYInvalidX()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testMoveMouseXYInvalidX" duration-ms="0" started-at="2020-09-29T12:52:37Z" finished-at="2020-09-29T12:52:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMoveMouseXYInvalidX -->
        <test-method status="PASS" signature="testMoveMouseXYInvalidXY()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testMoveMouseXYInvalidXY" duration-ms="0" started-at="2020-09-29T12:52:38Z" finished-at="2020-09-29T12:52:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMoveMouseXYInvalidXY -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="344" started-at="2020-09-29T12:52:38Z" finished-at="2020-09-29T12:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMoveMouseXYInvalidXY status=SUCCESS method=TestLogic.testMoveMouseXYInvalidXY()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:38Z" finished-at="2020-09-29T12:52:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="354" started-at="2020-09-29T12:52:38Z" finished-at="2020-09-29T12:52:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMoveMouseXYInvalidY status=SUCCESS method=TestLogic.testMoveMouseXYInvalidY()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testMoveMouseXYInvalidY()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testMoveMouseXYInvalidY" duration-ms="0" started-at="2020-09-29T12:52:38Z" finished-at="2020-09-29T12:52:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMoveMouseXYInvalidY -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:38Z" finished-at="2020-09-29T12:52:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testMoveMouseXYSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testMoveMouseXYSuccess" duration-ms="209" started-at="2020-09-29T12:52:38Z" finished-at="2020-09-29T12:52:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMoveMouseXYSuccess -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:38Z" finished-at="2020-09-29T12:52:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="345" started-at="2020-09-29T12:52:39Z" finished-at="2020-09-29T12:52:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMoveMouseXYSuccess status=SUCCESS method=TestLogic.testMoveMouseXYSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testNavigateFailure()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testNavigateFailure" duration-ms="14539" started-at="2020-09-29T12:52:39Z" finished-at="2020-09-29T12:52:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNavigateFailure -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:39Z" finished-at="2020-09-29T12:52:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="1021" started-at="2020-09-29T12:52:53Z" finished-at="2020-09-29T12:52:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testNavigateFailure status=SUCCESS method=TestLogic.testNavigateFailure()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:54Z" finished-at="2020-09-29T12:52:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testNavigateSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testNavigateSuccess" duration-ms="1482" started-at="2020-09-29T12:52:54Z" finished-at="2020-09-29T12:52:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNavigateSuccess -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="1139" started-at="2020-09-29T12:52:56Z" finished-at="2020-09-29T12:52:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testNavigateSuccess status=SUCCESS method=TestLogic.testNavigateSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:57Z" finished-at="2020-09-29T12:52:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testPasteValueEmptyValue()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testPasteValueEmptyValue" duration-ms="254" started-at="2020-09-29T12:52:57Z" finished-at="2020-09-29T12:52:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPasteValueEmptyValue -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="379" started-at="2020-09-29T12:52:57Z" finished-at="2020-09-29T12:52:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPasteValueEmptyValue status=SUCCESS method=TestLogic.testPasteValueEmptyValue()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testPasteValueInvalidxPath()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testPasteValueInvalidxPath" duration-ms="27" started-at="2020-09-29T12:52:58Z" finished-at="2020-09-29T12:52:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPasteValueInvalidxPath -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:58Z" finished-at="2020-09-29T12:52:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="360" started-at="2020-09-29T12:52:58Z" finished-at="2020-09-29T12:52:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPasteValueInvalidxPath status=SUCCESS method=TestLogic.testPasteValueInvalidxPath()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:58Z" finished-at="2020-09-29T12:52:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testPasteValueNullValue()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testPasteValueNullValue" duration-ms="53" started-at="2020-09-29T12:52:58Z" finished-at="2020-09-29T12:52:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPasteValueNullValue -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="344" started-at="2020-09-29T12:52:58Z" finished-at="2020-09-29T12:52:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPasteValueNullValue status=SUCCESS method=TestLogic.testPasteValueNullValue()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:58Z" finished-at="2020-09-29T12:52:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testPasteValueNullxPath()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testPasteValueNullxPath" duration-ms="0" started-at="2020-09-29T12:52:58Z" finished-at="2020-09-29T12:52:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPasteValueNullxPath -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="357" started-at="2020-09-29T12:52:58Z" finished-at="2020-09-29T12:52:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPasteValueNullxPath status=SUCCESS method=TestLogic.testPasteValueNullxPath()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testPasteValueSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testPasteValueSuccess" duration-ms="71" started-at="2020-09-29T12:52:59Z" finished-at="2020-09-29T12:52:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPasteValueSuccess -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:59Z" finished-at="2020-09-29T12:52:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="361" started-at="2020-09-29T12:52:59Z" finished-at="2020-09-29T12:52:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPasteValueSuccess status=SUCCESS method=TestLogic.testPasteValueSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testReadDynamicLineSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testReadDynamicLineSuccess" duration-ms="4" started-at="2020-09-29T12:52:59Z" finished-at="2020-09-29T12:52:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadDynamicLineSuccess -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:52:59Z" finished-at="2020-09-29T12:52:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="387" started-at="2020-09-29T12:52:59Z" finished-at="2020-09-29T12:53:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testReadDynamicLineSuccess status=SUCCESS method=TestLogic.testReadDynamicLineSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:53:00Z" finished-at="2020-09-29T12:53:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testReadDynamicValueSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testReadDynamicValueSuccess" duration-ms="1" started-at="2020-09-29T12:53:00Z" finished-at="2020-09-29T12:53:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadDynamicValueSuccess -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="360" started-at="2020-09-29T12:53:00Z" finished-at="2020-09-29T12:53:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testReadDynamicValueSuccess status=SUCCESS method=TestLogic.testReadDynamicValueSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="365" started-at="2020-09-29T12:53:00Z" finished-at="2020-09-29T12:53:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testScrollXYInvalidX status=SUCCESS method=TestLogic.testScrollXYInvalidX()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:53:00Z" finished-at="2020-09-29T12:53:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testScrollXYInvalidX()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testScrollXYInvalidX" duration-ms="0" started-at="2020-09-29T12:53:00Z" finished-at="2020-09-29T12:53:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScrollXYInvalidX -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:53:00Z" finished-at="2020-09-29T12:53:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testScrollXYSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testScrollXYSuccess" duration-ms="9" started-at="2020-09-29T12:53:00Z" finished-at="2020-09-29T12:53:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScrollXYSuccess -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="343" started-at="2020-09-29T12:53:00Z" finished-at="2020-09-29T12:53:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testScrollXYSuccess status=SUCCESS method=TestLogic.testScrollXYSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testSelectInvalidValue()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testSelectInvalidValue" duration-ms="46" started-at="2020-09-29T12:53:01Z" finished-at="2020-09-29T12:53:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectInvalidValue -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:53:01Z" finished-at="2020-09-29T12:53:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="351" started-at="2020-09-29T12:53:01Z" finished-at="2020-09-29T12:53:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSelectInvalidValue status=SUCCESS method=TestLogic.testSelectInvalidValue()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:53:01Z" finished-at="2020-09-29T12:53:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testSelectInvalidXpath()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testSelectInvalidXpath" duration-ms="17" started-at="2020-09-29T12:53:01Z" finished-at="2020-09-29T12:53:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectInvalidXpath -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="354" started-at="2020-09-29T12:53:01Z" finished-at="2020-09-29T12:53:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSelectInvalidXpath status=SUCCESS method=TestLogic.testSelectInvalidXpath()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:53:02Z" finished-at="2020-09-29T12:53:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="343" started-at="2020-09-29T12:53:02Z" finished-at="2020-09-29T12:53:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSelectNullxPath status=SUCCESS method=TestLogic.testSelectNullxPath()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testSelectNullxPath()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testSelectNullxPath" duration-ms="0" started-at="2020-09-29T12:53:02Z" finished-at="2020-09-29T12:53:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectNullxPath -->
        <test-method status="PASS" signature="testSelectSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testSelectSuccess" duration-ms="82" started-at="2020-09-29T12:53:02Z" finished-at="2020-09-29T12:53:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectSuccess -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:53:02Z" finished-at="2020-09-29T12:53:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="353" started-at="2020-09-29T12:53:02Z" finished-at="2020-09-29T12:53:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSelectSuccess status=SUCCESS method=TestLogic.testSelectSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:53:02Z" finished-at="2020-09-29T12:53:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testSelectWindowSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testSelectWindowSuccess" duration-ms="4" started-at="2020-09-29T12:53:02Z" finished-at="2020-09-29T12:53:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectWindowSuccess -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="349" started-at="2020-09-29T12:53:02Z" finished-at="2020-09-29T12:53:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSelectWindowSuccess status=SUCCESS method=TestLogic.testSelectWindowSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testSetInvalid()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testSetInvalid" duration-ms="15" started-at="2020-09-29T12:53:03Z" finished-at="2020-09-29T12:53:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetInvalid -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:53:03Z" finished-at="2020-09-29T12:53:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="349" started-at="2020-09-29T12:53:03Z" finished-at="2020-09-29T12:53:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSetInvalid status=SUCCESS method=TestLogic.testSetInvalid()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:53:03Z" finished-at="2020-09-29T12:53:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testSetNull()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testSetNull" duration-ms="20" started-at="2020-09-29T12:53:03Z" finished-at="2020-09-29T12:53:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetNull -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="342" started-at="2020-09-29T12:53:03Z" finished-at="2020-09-29T12:53:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSetNull status=SUCCESS method=TestLogic.testSetNull()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testSetSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testSetSuccess" duration-ms="89" started-at="2020-09-29T12:53:03Z" finished-at="2020-09-29T12:53:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetSuccess -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:53:03Z" finished-at="2020-09-29T12:53:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="363" started-at="2020-09-29T12:53:03Z" finished-at="2020-09-29T12:53:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSetSuccess status=SUCCESS method=TestLogic.testSetSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testSwitchInvalid()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testSwitchInvalid" duration-ms="5" started-at="2020-09-29T12:53:04Z" finished-at="2020-09-29T12:53:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwitchInvalid -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:53:04Z" finished-at="2020-09-29T12:53:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="369" started-at="2020-09-29T12:53:04Z" finished-at="2020-09-29T12:53:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSwitchInvalid status=SUCCESS method=TestLogic.testSwitchInvalid()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testSwitchSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testSwitchSuccess" duration-ms="11" started-at="2020-09-29T12:53:04Z" finished-at="2020-09-29T12:53:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSwitchSuccess -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:53:04Z" finished-at="2020-09-29T12:53:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="438" started-at="2020-09-29T12:53:04Z" finished-at="2020-09-29T12:53:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSwitchSuccess status=SUCCESS method=TestLogic.testSwitchSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="376" started-at="2020-09-29T12:53:05Z" finished-at="2020-09-29T12:53:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTypeNullxPath status=SUCCESS method=TestLogic.testTypeNullxPath()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testTypeNullxPath()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testTypeNullxPath" duration-ms="0" started-at="2020-09-29T12:53:05Z" finished-at="2020-09-29T12:53:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTypeNullxPath -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:53:05Z" finished-at="2020-09-29T12:53:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testTypeSuccessWith1Word()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testTypeSuccessWith1Word" duration-ms="39" started-at="2020-09-29T12:53:05Z" finished-at="2020-09-29T12:53:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTypeSuccessWith1Word -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:53:05Z" finished-at="2020-09-29T12:53:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="438" started-at="2020-09-29T12:53:05Z" finished-at="2020-09-29T12:53:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTypeSuccessWith1Word status=SUCCESS method=TestLogic.testTypeSuccessWith1Word()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:53:06Z" finished-at="2020-09-29T12:53:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testTypeSuccessWith2Words()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testTypeSuccessWith2Words" duration-ms="33" started-at="2020-09-29T12:53:06Z" finished-at="2020-09-29T12:53:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTypeSuccessWith2Words -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="377" started-at="2020-09-29T12:53:06Z" finished-at="2020-09-29T12:53:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTypeSuccessWith2Words status=SUCCESS method=TestLogic.testTypeSuccessWith2Words()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:53:06Z" finished-at="2020-09-29T12:53:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testTypeSuccessWithAlt()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testTypeSuccessWithAlt" duration-ms="42" started-at="2020-09-29T12:53:06Z" finished-at="2020-09-29T12:53:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTypeSuccessWithAlt -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="377" started-at="2020-09-29T12:53:06Z" finished-at="2020-09-29T12:53:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTypeSuccessWithAlt status=SUCCESS method=TestLogic.testTypeSuccessWithAlt()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:53:06Z" finished-at="2020-09-29T12:53:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testTypeSuccessWithAltAndWord()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testTypeSuccessWithAltAndWord" duration-ms="46" started-at="2020-09-29T12:53:06Z" finished-at="2020-09-29T12:53:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTypeSuccessWithAltAndWord -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="393" started-at="2020-09-29T12:53:06Z" finished-at="2020-09-29T12:53:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTypeSuccessWithAltAndWord status=SUCCESS method=TestLogic.testTypeSuccessWithAltAndWord()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:53:07Z" finished-at="2020-09-29T12:53:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testTypeSuccessWithCtrl()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testTypeSuccessWithCtrl" duration-ms="36" started-at="2020-09-29T12:53:07Z" finished-at="2020-09-29T12:53:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTypeSuccessWithCtrl -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="355" started-at="2020-09-29T12:53:07Z" finished-at="2020-09-29T12:53:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTypeSuccessWithCtrl status=SUCCESS method=TestLogic.testTypeSuccessWithCtrl()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:53:07Z" finished-at="2020-09-29T12:53:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testTypeSuccessWithCtrlAndWord()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testTypeSuccessWithCtrlAndWord" duration-ms="28" started-at="2020-09-29T12:53:07Z" finished-at="2020-09-29T12:53:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTypeSuccessWithCtrlAndWord -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="341" started-at="2020-09-29T12:53:07Z" finished-at="2020-09-29T12:53:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTypeSuccessWithCtrlAndWord status=SUCCESS method=TestLogic.testTypeSuccessWithCtrlAndWord()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:53:08Z" finished-at="2020-09-29T12:53:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="342" started-at="2020-09-29T12:53:08Z" finished-at="2020-09-29T12:53:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTypeSuccessWithNull status=SUCCESS method=TestLogic.testTypeSuccessWithNull()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testTypeSuccessWithNull()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testTypeSuccessWithNull" duration-ms="0" started-at="2020-09-29T12:53:08Z" finished-at="2020-09-29T12:53:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTypeSuccessWithNull -->
        <test-method status="PASS" signature="testTypeSuccessWithShift()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testTypeSuccessWithShift" duration-ms="23" started-at="2020-09-29T12:53:08Z" finished-at="2020-09-29T12:53:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTypeSuccessWithShift -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:53:08Z" finished-at="2020-09-29T12:53:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="345" started-at="2020-09-29T12:53:08Z" finished-at="2020-09-29T12:53:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTypeSuccessWithShift status=SUCCESS method=TestLogic.testTypeSuccessWithShift()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testTypeSuccessWithShiftAndWord()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testTypeSuccessWithShiftAndWord" duration-ms="31" started-at="2020-09-29T12:53:08Z" finished-at="2020-09-29T12:53:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTypeSuccessWithShiftAndWord -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:53:08Z" finished-at="2020-09-29T12:53:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="357" started-at="2020-09-29T12:53:08Z" finished-at="2020-09-29T12:53:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTypeSuccessWithShiftAndWord status=SUCCESS method=TestLogic.testTypeSuccessWithShiftAndWord()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testWaitForElementFailure()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testWaitForElementFailure" duration-ms="10217" started-at="2020-09-29T12:53:09Z" finished-at="2020-09-29T12:53:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWaitForElementFailure -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:53:09Z" finished-at="2020-09-29T12:53:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="388" started-at="2020-09-29T12:53:19Z" finished-at="2020-09-29T12:53:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testWaitForElementFailure status=SUCCESS method=TestLogic.testWaitForElementFailure()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="346" started-at="2020-09-29T12:53:19Z" finished-at="2020-09-29T12:53:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testWaitForElementNull status=SUCCESS method=TestLogic.testWaitForElementNull()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testWaitForElementNull()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testWaitForElementNull" duration-ms="0" started-at="2020-09-29T12:53:19Z" finished-at="2020-09-29T12:53:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWaitForElementNull -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:53:19Z" finished-at="2020-09-29T12:53:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testWaitForElementSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testWaitForElementSuccess" duration-ms="35" started-at="2020-09-29T12:53:20Z" finished-at="2020-09-29T12:53:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWaitForElementSuccess -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:53:20Z" finished-at="2020-09-29T12:53:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="346" started-at="2020-09-29T12:53:20Z" finished-at="2020-09-29T12:53:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testWaitForElementSuccess status=SUCCESS method=TestLogic.testWaitForElementSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="362" started-at="2020-09-29T12:53:20Z" finished-at="2020-09-29T12:53:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testWaitLettersInValue status=SUCCESS method=TestLogic.testWaitLettersInValue()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testWaitLettersInValue()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testWaitLettersInValue" duration-ms="0" started-at="2020-09-29T12:53:20Z" finished-at="2020-09-29T12:53:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWaitLettersInValue -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:53:20Z" finished-at="2020-09-29T12:53:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="349" started-at="2020-09-29T12:53:20Z" finished-at="2020-09-29T12:53:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testWaitNegativeValue status=SUCCESS method=TestLogic.testWaitNegativeValue()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testWaitNegativeValue()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testWaitNegativeValue" duration-ms="0" started-at="2020-09-29T12:53:20Z" finished-at="2020-09-29T12:53:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWaitNegativeValue -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:53:20Z" finished-at="2020-09-29T12:53:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:53:21Z" finished-at="2020-09-29T12:53:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testWaitSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testWaitSuccess" duration-ms="1000" started-at="2020-09-29T12:53:21Z" finished-at="2020-09-29T12:53:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWaitSuccess -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="350" started-at="2020-09-29T12:53:22Z" finished-at="2020-09-29T12:53:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testWaitSuccess status=SUCCESS method=TestLogic.testWaitSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testWriteDynamicLineInvalid()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testWriteDynamicLineInvalid" duration-ms="0" started-at="2020-09-29T12:53:22Z" finished-at="2020-09-29T12:53:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteDynamicLineInvalid -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="343" started-at="2020-09-29T12:53:22Z" finished-at="2020-09-29T12:53:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testWriteDynamicLineInvalid status=SUCCESS method=TestLogic.testWriteDynamicLineInvalid()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:53:22Z" finished-at="2020-09-29T12:53:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:53:22Z" finished-at="2020-09-29T12:53:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testWriteDynamicLineSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testWriteDynamicLineSuccess" duration-ms="2" started-at="2020-09-29T12:53:22Z" finished-at="2020-09-29T12:53:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteDynamicLineSuccess -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="368" started-at="2020-09-29T12:53:22Z" finished-at="2020-09-29T12:53:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testWriteDynamicLineSuccess status=SUCCESS method=TestLogic.testWriteDynamicLineSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="408" started-at="2020-09-29T12:53:23Z" finished-at="2020-09-29T12:53:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testWriteDynamicValueInvalid status=SUCCESS method=TestLogic.testWriteDynamicValueInvalid()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="testWriteDynamicValueInvalid()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testWriteDynamicValueInvalid" duration-ms="0" started-at="2020-09-29T12:53:23Z" finished-at="2020-09-29T12:53:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteDynamicValueInvalid -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:53:23Z" finished-at="2020-09-29T12:53:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="testWriteDynamicValueSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="testWriteDynamicValueSuccess" duration-ms="2" started-at="2020-09-29T12:53:23Z" finished-at="2020-09-29T12:53:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteDynamicValueSuccess -->
        <test-method status="PASS" signature="InicializeVariables()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="InicializeVariables" is-config="true" duration-ms="0" started-at="2020-09-29T12:53:23Z" finished-at="2020-09-29T12:53:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InicializeVariables -->
        <test-method status="PASS" signature="goBack(org.testng.ITestResult)[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="goBack" is-config="true" duration-ms="431" started-at="2020-09-29T12:53:23Z" finished-at="2020-09-29T12:53:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testWriteDynamicValueSuccess status=SUCCESS method=TestLogic.testWriteDynamicValueSuccess()[pri:0, instance:knowler_unitTests.TestLogic@80a178] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goBack -->
        <test-method status="PASS" signature="FinalizeBrowser()[pri:0, instance:knowler_unitTests.TestLogic@80a178]" name="FinalizeBrowser" is-config="true" duration-ms="1222" started-at="2020-09-29T12:53:24Z" finished-at="2020-09-29T12:53:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FinalizeBrowser -->
      </class> <!-- knowler_unitTests.TestLogic -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
